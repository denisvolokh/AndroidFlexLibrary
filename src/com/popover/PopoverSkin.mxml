<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.
    
    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnablePopUpContainer container.  

    @see spark.components.SkinnablePopUpContainer
    
    @langversion 3.0
    @playerversion Flash 10
    @playerversion AIR 2.5
    @productversion Flex 4.5
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
        xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5">
	<fx:Metadata>[HostComponent("com.popover.Popover")]</fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                /* if (isNaN(getStyle("backgroundColor")))
                {
                    background.visible = false;
                }
                else
                {
                    background.visible = true;
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
                } */
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>        
    </fx:Script>
    
    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled"/>
        <s:State name="closed" stateGroups="closedGroup"/>
        <s:State name="disabledAndClosed" stateGroups="closedGroup"/>
		<s:State name="top"/>
		<s:State name="bottom"/>
		<s:State name="right"/>
		<s:State name="left"/>
    </s:states>
    
    <!-- Transitions for open and close -->
    <s:transitions>
        <s:Transition fromState="closed" toState="normal" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="disabledAndClosed" toState="disabled" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>
        
        <s:Transition fromState="normal" toState="closed" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="disabled" toState="disabledAndClosed" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>
    </s:transitions>
	
    <s:Group id="chrome" left="0" right="0" top="0" bottom="0" visible.closedGroup="false">
		
        <s:Group id="contentGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
            <s:layout>
                <s:VerticalLayout horizontalAlign="center" verticalAlign="middle" gap="-2"/>
            </s:layout>
			
			<s:filters>
				<s:DropShadowFilter color="0x000000" 
									blurX="20" 
									blurY="20"
									distance="8" 
									angle="90"
									alpha="0.30"/>
			</s:filters>
			
			<s:Group id="topArrow" includeIn="top">
				<s:Path winding="nonZero" data="M 13 1 L 0 23 L 26 23 L 13 1 Z " >
					<s:fill>
						<s:SolidColor color="#4b4b4b"/>
					</s:fill>
					<!--<s:stroke>
						<s:SolidColorStroke  weight="1" color="#cccccc" joints="bevel" alpha=".5"/>
					</s:stroke>-->
				</s:Path>
			</s:Group>
			
			
			<s:Group>
				<s:layout>
					<s:HorizontalLayout horizontalAlign="center"
										verticalAlign="middle"
										gap="-2"/>
				</s:layout>
				
				<s:Group id="leftArrow" includeIn="left">
					<s:Path winding="nonZero" data="M 2 12 L 24 25 L 24 -1 L 2 12 Z " >
						<s:fill>
							<s:SolidColor color="#4b4b4b"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke  weight="1" color="#cccccc" joints="bevel" alpha=".5"/>
						</s:stroke>
					</s:Path>
				</s:Group>
				
				<s:Group horizontalCenter="0"
						 verticalCenter="0">
					<s:Rect id="background" 
							left="0" right="0" top="1" bottom="0" 
							radiusX="5"
							radiusY="5">
						<s:fill>
							<s:SolidColor color="0x4b4b4b"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke  weight="1" color="#cccccc" joints="bevel" alpha=".5"/>
						</s:stroke>
					</s:Rect>	
					
					<s:VGroup id="customContentHolder"
							  bottom="5"
							  top="5"
							  left="5"
							  right="5"
							  verticalAlign="middle"
							  horizontalAlign="center"/>
				</s:Group>
				
				<s:Group id="rightArrow" includeIn="right">
					<s:Path data="M 24 12 L 2 -1 L 2 25 L 24 12 Z " winding="nonZero">
						<s:fill>
							<s:SolidColor color="#4b4b4b"/>
						</s:fill>
						<s:stroke>
							<s:SolidColorStroke  weight="1" color="#cccccc" joints="bevel" alpha=".5"/>
						</s:stroke>
					</s:Path>
				</s:Group>
				
			</s:Group>
			
			<s:Group id="bottomArrow" includeIn="bottom">
				<s:Path winding="nonZero" data="M 13 23 L 0 1 L 26 1 L 13 23 Z " >
					<s:fill>
						<s:SolidColor color="#4b4b4b"/>
					</s:fill>
					<!--<s:stroke>
						<s:SolidColorStroke  weight="1" color="#cccccc" joints="bevel" alpha=".5"/>
					</s:stroke>-->
				</s:Path>
			</s:Group>
        </s:Group>
    </s:Group>
    
</s:Skin>

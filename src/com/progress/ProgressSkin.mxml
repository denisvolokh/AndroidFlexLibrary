<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.
    
    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnablePopUpContainer container.  

    @see spark.components.SkinnablePopUpContainer
    
    @langversion 3.0
    @playerversion Flash 10
    @playerversion AIR 2.5
    @productversion Flex 4.5
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
        xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" xmlns:progress="com.progress.*">
	<fx:Metadata>[HostComponent("com.progress.Progress")]</fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                /* if (isNaN(getStyle("backgroundColor")))
                {
                    background.visible = false;
                }
                else
                {
                    background.visible = true;
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
                } */
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>        
    </fx:Script>
    
    <s:states>
		<s:State name="indeterminate" />
		<s:State name="indeterminateWithLabel" />
		<s:State name="indeterminateWithLabelAndDetails"/>
		<s:State name="determinate"/>
		<s:State name="determinateWithLabel"/>
		<s:State name="determinateWithLabelAndDetails"/>
		<s:State name="customView"/>
		<s:State name="normal"/>
		<s:State name="disabled"/>
		<s:State name="closed" stateGroups="closedGroup"/>
		<s:State name="disabledAndClosed" stateGroups="closedGroup"/>
    </s:states>
    
    <!-- Transitions for open and close -->
    <s:transitions>
        <s:Transition fromState="closed" toState="normal" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="disabledAndClosed" toState="disabled" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>
        
        <s:Transition fromState="normal" toState="closed" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="disabled" toState="disabledAndClosed" autoReverse="true">
            <s:Fade duration="150" target="{chrome}"/>
        </s:Transition>
    </s:transitions>
        
    <!--- Defines the background and content group used by this skin. -->
    <s:Group id="chrome" 
			 left="0" 
			 right="0" 
			 top="0" 
			 bottom="0"
			 visible.closedGroup="false">
		<!--<s:RectangularDropShadow id="dropShadow"
								 blurX="20"
								 blurY="20"
								 alpha="0.45"
								 distance="7"
								 angle="90"
								 color="#000000"
								 left="0"
								 top="0"
								 right="0"
								 bottom="0"/>-->
		
        <!--- Defines the appearance of the SkinnablePopUpContainer class's background. -->
		<s:Rect id="background" 
				left="0" right="0" top="1" bottom="0" 
				radiusX="5"
				radiusY="5">
			<s:filters>
				<s:DropShadowFilter color="0x000000" 
									blurX="20" 
									blurY="20"
									distance="8" 
									angle="90"
									alpha="0.30"/>
			</s:filters>
			<s:fill>
				<s:SolidColor color="0x000000" alpha=".7"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke  weight="1" color="#cccccc" joints="bevel" alpha=".5"/>
			</s:stroke>
		</s:Rect>
        
        <!--
        Note: Setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
        -->
        <!--- @copy spark.components.SkinnableContainer#contentGroup -->
        <s:Group id="contentGroup" 
				 left="15" 
				 right="15" 
				 top="15" 
				 bottom="15" 
				 minHeight="100"
				 minWidth="100">
            <s:layout>
                <s:VerticalLayout verticalAlign="middle" horizontalAlign="center" gap="10"/>
            </s:layout>
			
			<s:BusyIndicator id="busyIndicator"
							 includeIn="closed,disabled,disabledAndClosed,indeterminate,indeterminateWithLabel,indeterminateWithLabelAndDetails,normal"
							 symbolColor="#FFFFFF"/>
			
			<progress:ProgressDiagram id="progressDiagram" 
									  width="50" height="50"
									  lineColor="0xFFFFFF"
									  fillColor="0xFFFFFF"
									  includeIn="closed,disabled,disabledAndClosed,determinate,determinateWithLabel,determinateWithLabelAndDetails,normal"/>
			
			<s:HGroup id="customViewContainer" 
					  horizontalAlign="center"
					  verticalAlign="middle"
					  includeIn="customView">
				
			</s:HGroup>
			
			<s:Label id="labelMessage"
					 includeIn="customView,indeterminateWithLabel,indeterminateWithLabelAndDetails,normal,closed,disabledAndClosed,disabled,determinateWithLabel,determinateWithLabelAndDetails"
					 color="#FFFFFF" fontSize="20" fontWeight="normal" text="Message"
					 textAlign="center"/>
			
			<s:Label id="labelDetails"
					 includeIn="indeterminateWithLabelAndDetails,normal,disabledAndClosed,closed,disabled,determinateWithLabelAndDetails"
					 color="#FFFFFF" fontSize="16" fontWeight="normal" text="Details"
					 textAlign="center"/>
			
        </s:Group>
    </s:Group>
    
</s:Skin>
